
#define EIGHT_FIRST
#ifdef	EIGHT_FIRST

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  
#include <list>
#include <queue>

#include <fstream>


/*
	vector -  136216567
	deque -   268435452
	list -	   85375361

*/
#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	
	list<int> a{ 1,3,4,9,5,7 };
	list<int> b{ 4,10,2,8,6 };

	// 내림차순 정렬 
	a.sort([](int L, int R) { return L > R; });
	b.sort([](int L, int R) { return L > R; });


	// a 와 b를 merge 하라
	a.merge(b); // 두 리스트를 완벽하게 합친다. 

	for (int n : a)
		cout << n << ' ';
	cout << endl;

	for (int n : b)
		cout << n << ' ';
	cout << endl;

	cout << "a 와 b를 Merge" << endl;

	for (int n : a)
		cout << n << ' ';
	cout << endl;
	MySaveFileCode::Save_File("8주차 자료/8주차_1.cpp", "8주차 자료/merge.txt읽기.txt");
	MySaveFileCode::Save_File_Auto(8, 1);
}

#endif

#define EIGHT_FIRST
#ifdef	EIGHT_FIRST

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  
#include <list>
#include <queue>

#include <fstream>


/*
	vector -  136216567
	deque -   268435452
	list -	   85375361

*/
#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	
	list<int> a{ 1,3,4,9,5,7 };
	list<int> b{ 4,10,2,8,6 };

	// 내림차순 정렬 
	a.sort([](int L, int R) { return L > R; });
	b.sort([](int L, int R) { return L > R; });


	// a 와 b를 merge 하라
	a.merge(b, [](int L, int R) { return L < R; }); // 두 리스트를 완벽하게 합친다. 

	for (int n : a)
		cout << n << ' ';
	cout << endl;

	for (int n : b)
		cout << n << ' ';
	cout << endl;

	cout << "a 와 b를 Merge" << endl;

	for (int n : a)
		cout << n << ' ';
	cout << endl;
	MySaveFileCode::Save_File("8주차 자료/8주차_1.cpp", "8주차 자료/merge.txt읽기.txt");
	MySaveFileCode::Save_File_Auto(8, 1);
}

#endif

#define EIGHT_FIRST
#ifdef	EIGHT_FIRST

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  
#include <list>
#include <queue>

#include <fstream>


/*
	vector -  136216567
	deque -   268435452
	list -	   85375361

*/
#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	
	list<int> a{ 1,3,4,9,5,7 };
	list<int> b{ 4,10,2,8,6 };

	// 내림차순 정렬 
	a.sort([](int L, int R) { return L > R; });
	b.sort([](int L, int R) { return L > R; });


	// a 와 b를 merge 하라
	a.merge(b, [](int L, int R) { return L > R; }); // 두 리스트를 완벽하게 합친다. 

	for (int n : a)
		cout << n << ' ';
	cout << endl;

	for (int n : b)
		cout << n << ' ';
	cout << endl;

	cout << "a 와 b를 Merge" << endl;

	for (int n : a)
		cout << n << ' ';
	cout << endl;
	MySaveFileCode::Save_File("8주차 자료/8주차_1.cpp", "8주차 자료/merge.txt읽기.txt");
	MySaveFileCode::Save_File_Auto(8, 1);
}

#endif

#define EIGHT_FIRST
#ifdef	EIGHT_FIRST

// ============================================ // 
// Sequence Container - list - 멤버로 작성된 함수들ㅇ르 활용하라. ( sort, merge )
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  
#include <list>
#include <queue>

#include <fstream>


/*
	vector -  136216567
	deque -   268435452
	list -	   85375361

*/
#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	
	list<int> a{ 1,3,4,9,5,7 };
	list<int> b{ 4,10,2,8,6 };

	// 내림차순 정렬 
	a.sort([](int L, int R) { return L > R; });
	b.sort([](int L, int R) { return L > R; });


	// a 와 b를 merge 하라
	a.merge(b, [](int L, int R) { return L > R; }); // 두 리스트를 완벽하게 합친다. 

	for (int n : a)
		cout << n << ' ';
	cout << endl;

	for (int n : b)
		cout << n << ' ';
	cout << endl;

	cout << "a 와 b를 Merge" << endl;

	for (int n : a)
		cout << n << ' ';
	cout << endl;
	MySaveFileCode::Save_File("8주차 자료/8주차_1.cpp", "8주차 자료/merge.txt읽기.txt");
	MySaveFileCode::Save_File_Auto(8, 1);
}

#endif
