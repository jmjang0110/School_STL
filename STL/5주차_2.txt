#define FIFTH_SECOND
#ifdef FIFTH_SECOND

// --------------------------------------------------
//	2023 1 학기 STL 4월 03일 TUE 23 Tue 56 ( 5주 1)
// --------------------------------------------------
// STL 소개 
// --------------------------------------------------

/*
	1. 데이터 읽고 쓰기 가능해야 한다.
	2.
*/

/*
	STL
		- 자료구조 ( Container ) + 알고리즘
		- STL 이 뭐야? >>	표준라이브러리인데 자료구조와 알고리즘을 제공한다.
							반복자를 이용한다.
		- 용어
			- Generic Programming, Containter, Iterator, Algorithm
			- Adaptor, Predicates, Function Object, Callable Types
			- Concepts, Ranges, Span

		STL Components
			- STL 은 컴포넌트 ( 컨테이너, 반복자, 알고리즘 )

		Adaptor
		Predicates			: 리턴값이 맞냐 틀리냐를 판단해준다.
		Function Objects	:

		STL
		입력 컨에티너가 두개인데, 어떤 알고리즘이 컨테이너를
		반복자를 이용해서 결과를 내놓는다.

		STL Sequence Container ( Q(n )
			- array
			- vector
			- deque : 덱 ( 디큐 아니다 )
			- forward_list
			- list
		STL Associative Containers ( Q(logn)
			- set
			- map
			- multiset
			- multimap
			-> 항상 정렬상태 유지 - 빠르게 응답(찾기) 가능 로그n

		STL Unordered Associative Containers ( Q(1) )
			- Hash Function
			 - 더 빨리 찾으려고 쓴다.

		STL Containter Adaptors
			- deque
			- stack
			- flat_map
			- flat_set
		Container 가 뭐야?
			- Containers are objects that store other objects
		ex ) 

		Design Pattern - Composite Pattern
*/


#include <iostream>
#include <vector>


#include "String.h"
#include "save.h"

using namespace std;


// -------	
int main()
// -------
{

	vector<vector<vector<int>>> v; // Instancing - store other objects


	

	MySaveFileCode::Save_File("5주차_2.cpp", "5주차_2.txt");
	//MySaveFileCode::Save_File("String.h", "String_Class.txt");
	//MySaveFileCode::Save_File("String.cpp", "String_Class.txt");

	// dangling pointer - static 포인터 가리킬때 댕글링 걸리면 프로그램 사망 

}
#endif // FIFTH_SECOND

#define FIFTH_SECOND
#ifdef FIFTH_SECOND

// --------------------------------------------------
//	2023 1 학기 STL 4월 03일 TUE 23 Tue 56 ( 5주 1)
// --------------------------------------------------
// STL 소개 
// --------------------------------------------------



#include <iostream>
#include <array> // 템플릿 이기 때문에 소스가 오픈되어 있다. 



#include "String.h"
#include "save.h"

using namespace std;

// -------	
int main()
// -------
{
	array<int, 10> a = { 1,3,5,7,9,2,4,6,8,10 }; // 40 바이트  - 10 은 end 위치가 아니다 10 앞에가 end()

	// *p : undefined Behavior

	// [문제] a 의 모든 데이터를 출력하시오
	// 반복자 : 포이ㄴ타어ㅏ ㅂ유사하다.

	for (array<int, 10>::iterator p = a.begin(); p != a.end(); ++p) {  // p++ 안됨
	}

	for (auto p = a.begin(); p != a.end(); ++p) {
		cout << *p << endl;
	}

	// [문제] a의 모든 데이터를 역순으로 화면에 출력하라 
	for (auto p = a.rbegin(); p != a.rend(); ++p) {
		cout << *p << endl;
	}


	/*while (p != a.end()) {
		cout << *p << endl;
		++p;
	
	}*/

	

	cout << a[3] << endl;
	cout << a.operator[](3) << endl;

	MySaveFileCode::Save_File("5주차_2.cpp", "5주차_2.txt");
	//MySaveFileCode::Save_File("String.h", "String_Class.txt");
	//MySaveFileCode::Save_File("String.cpp", "String_Class.txt");

}
#endif // FIFTH_SECOND

#define FIFTH_SECOND
#ifdef FIFTH_SECOND

// --------------------------------------------------
//	2023 1 학기 STL 4월 03일 TUE 23 Tue 56 ( 5주 1)
// --------------------------------------------------
// STL 소개 
// --------------------------------------------------



#include <iostream>
#include <array> // 템플릿 이기 때문에 소스가 오픈되어 있다. 



#include "String.h"
#include "save.h"

using namespace std;

// -------	
int main()
// -------
{
	array<int, 10> a = { 1,3,5,7,9,2,4,6,8,10 }; // 40 바이트  - 10 은 end 위치가 아니다 10 앞에가 end()

	// *p : undefined Behavior

	// [문제] a 의 모든 데이터를 출력하시오
	// 반복자 : 포이ㄴ타어ㅏ ㅂ유사하다.

	for (array<int, 10>::iterator p = a.begin(); p != a.end(); ++p) {  // p++ 안됨
	}

	for (auto p = a.begin(); p != a.end(); ++p) {
		cout << *p << endl;
	}

	// [문제] a의 모든 데이터를 역순으로 화면에 출력하라 
	for (auto p = a.rbegin(); p != a.rend(); ++p) {
		cout << *p << endl;
	}
	/*
		rbegin() : 역방향 반복자 
		반복자 : adaptor 

	*/

	for (int i = 0; i < a.size(); ++i)
		cout << a[i] << ' ';


	/*while (p != a.end()) {
		cout << *p << endl;
		++p;
	
	}*/

	

	cout << a[3] << endl;
	cout << a.operator[](3) << endl;

	MySaveFileCode::Save_File("5주차_2.cpp", "5주차_2.txt");
	//MySaveFileCode::Save_File("String.h", "String_Class.txt");
	//MySaveFileCode::Save_File("String.cpp", "String_Class.txt");

}
#endif // FIFTH_SECOND

#define FIFTH_SECOND
#ifdef FIFTH_SECOND

// --------------------------------------------------
//	2023 1 학기 STL 4월 03일 TUE 23 Tue 56 ( 5주 1)
// --------------------------------------------------
// STL 소개 
// --------------------------------------------------



#include <iostream>
#include <array> // 템플릿 이기 때문에 소스가 오픈되어 있다. 



#include "String.h"
#include "save.h"

using namespace std;

// -------	
int main()
// -------
{
	array<int, 10> a = { 1,3,5,7,9,2,4,6,8,10 }; // 40 바이트  - 10 은 end 위치가 아니다 10 앞에가 end()

	// *p : undefined Behavior

	// [문제] a 의 모든 데이터를 출력하시오
	// 반복자 : 포이ㄴ타어ㅏ ㅂ유사하다.

	for (array<int, 10>::iterator p = a.begin(); p != a.end(); ++p) {  // p++ 안됨
	}

	for (auto p = a.begin(); p != a.end(); ++p) {
		cout << *p << endl;
	}

	// [문제] a의 모든 데이터를 역순으로 화면에 출력하라 
	for (auto p = a.rbegin(); p != a.rend(); ++p) {
		cout << *p << endl;
	}
	/*
		rbegin() : 역방향 반복자 
		반복자 : adaptor 

	*/

	for (int i = 0; i < a.size(); ++i)
		cout << a[i] << ' ';
	cout << endl;


	/*while (p != a.end()) {
		cout << *p << endl;
		++p;
	
	}*/

	

	cout << a[3] << endl;
	cout << a.operator[](3) << endl;

	MySaveFileCode::Save_File("5주차_2.cpp", "5주차_2.txt");
	//MySaveFileCode::Save_File("String.h", "String_Class.txt");
	//MySaveFileCode::Save_File("String.cpp", "String_Class.txt");

}
#endif // FIFTH_SECOND

#define FIFTH_SECOND
#ifdef FIFTH_SECOND

// --------------------------------------------------
//	2023 1 학기 STL 4월 03일 TUE 23 Tue 56 ( 5주 1)
// --------------------------------------------------
// STL 소개 
// --------------------------------------------------



#include <iostream>
#include <array> // 템플릿 이기 때문에 소스가 오픈되어 있다. 



#include "String.h"
#include "save.h"

using namespace std;

// -------	
int main()
// -------
{
	array<int, 10> a = { 1,3,5,7,9,2,4,6,8,10 }; // 40 바이트  - 10 은 end 위치가 아니다 10 앞에가 end()

	// *p : undefined Behavior

	// [문제] a 의 모든 데이터를 출력하시오
	// 반복자 : 포이ㄴ타어ㅏ ㅂ유사하다.

	for (array<int, 10>::iterator p = a.begin(); p != a.end(); ++p) {  // p++ 안됨
	}

	for (auto p = a.begin(); p != a.end(); ++p) {
		cout << *p << ' ' ;
	}
	cout << endl;


	// [문제] a의 모든 데이터를 역순으로 화면에 출력하라 
	for (auto p = a.rbegin(); p != a.rend(); ++p) {
		cout << *p << ' ' ;
	}
	cout << endl;


	/*
		rbegin() : 역방향 반복자 
		반복자 : adaptor 

	*/

	// array 는 이렇게 쓰면 돼
	for (int i = 0; i < a.size(); ++i)
		cout << a[i] << ' ';
	cout << endl;

	/*
		어떤 방법으로 쓰는게 좋을까? 

	*/

	/*while (p != a.end()) {
		cout << *p << endl;
		++p;
	
	}*/

	

	cout << a[3] << endl;
	cout << a.operator[](3) << endl;

	MySaveFileCode::Save_File("5주차_2.cpp", "5주차_2.txt");
	//MySaveFileCode::Save_File("String.h", "String_Class.txt");
	//MySaveFileCode::Save_File("String.cpp", "String_Class.txt");

}
#endif // FIFTH_SECOND

#define FIFTH_SECOND
#ifdef FIFTH_SECOND

// --------------------------------------------------
//	2023 1 학기 STL 4월 03일 TUE 23 Tue 56 ( 5주 1)
// --------------------------------------------------
// STL 소개 
// --------------------------------------------------



#include <iostream>
#include <array> // 템플릿 이기 때문에 소스가 오픈되어 있다. 



#include "String.h"
#include "save.h"

using namespace std;

// -------	
int main()
// -------
{
	array<int, 10> a = { 1,3,5,7,9,2,4,6,8,10 }; // 40 바이트  - 10 은 end 위치가 아니다 10 앞에가 end()

	array<int, 10>::value_type; // 어떤 타입의 원소를 담고 있어?
	array<int, 10>::size_type; // 어떤 타입으로 세니?
	array<int, 10>::difference_type; // 반복자간의 거리를 어떤 타입으로 제니?
	array<int, 10>::reference; // 담고 있는 원소의 레퍼런스 타입은 뭐니?
	array<int, 10>::pointer; // 무슨타입의 포잉ㄴ터를 써야 너를 담을 수 있니?
	array<int, 10>::iterator; // 반복자는 무슨 타입이니?

	// constexpr : 컴파일 시 이 레퍼런스를 이용할 수 있는 상태
	
	a.back() = 12345;
	cout << a.back() << endl;

	MySaveFileCode::Save_File("5주차_2.cpp", "5주차_2.txt");
	//MySaveFileCode::Save_File("String.h", "String_Class.txt");
	//MySaveFileCode::Save_File("String.cpp", "String_Class.txt");

}
#endif // FIFTH_SECOND

#define FIFTH_SECOND
#ifdef FIFTH_SECOND

// --------------------------------------------------
//	2023 1 학기 STL 4월 03일 TUE 23 Tue 56 ( 5주 1)
// --------------------------------------------------
// STL 소개 
// --------------------------------------------------



#include <iostream>
#include <array> // 템플릿 이기 때문에 소스가 오픈되어 있다. 



#include "String.h"
#include "save.h"

using namespace std;

// -------	
int main()
// -------
{
	array<int, 10> a = { 1,3,5,7,9,2,4,6,8,10 }; // 40 바이트  - 10 은 end 위치가 아니다 10 앞에가 end()

	array<int, 10>::value_type; // 어떤 타입의 원소를 담고 있어?
	array<int, 10>::size_type; // 어떤 타입으로 세니?
	array<int, 10>::difference_type; // 반복자간의 거리를 어떤 타입으로 제니?
	array<int, 10>::reference; // 담고 있는 원소의 레퍼런스 타입은 뭐니?
	array<int, 10>::pointer; // 무슨타입의 포잉ㄴ터를 써야 너를 담을 수 있니?
	array<int, 10>::iterator; // 반복자는 무슨 타입이니?

	// constexpr : 컴파일 시 이 레퍼런스를 이용할 수 있는 상태
	
	a.back() = 12345;
	cout << a.back() << endl;
	for (int i = 0; i < a.size(); ++i)
		cout << a[i] << " ";

	MySaveFileCode::Save_File("5주차_2.cpp", "5주차_2.txt");
	//MySaveFileCode::Save_File("String.h", "String_Class.txt");
	//MySaveFileCode::Save_File("String.cpp", "String_Class.txt");

}
#endif // FIFTH_SECOND

#define FIFTH_SECOND
#ifdef FIFTH_SECOND

// --------------------------------------------------
//	2023 1 학기 STL 4월 03일 TUE 23 Tue 56 ( 5주 1)
// --------------------------------------------------
// STL 소개 
// --------------------------------------------------



#include <iostream>
#include <array> // 템플릿 이기 때문에 소스가 오픈되어 있다. 



#include "String.h"
#include "save.h"

using namespace std;

// -------	
int main()
// -------
{
	array<int, 10> a = { 1,3,5,7,9,2,4,6,8,10 }; // 40 바이트  - 10 은 end 위치가 아니다 10 앞에가 end()

	array<int, 10>::value_type; // 어떤 타입의 원소를 담고 있어?
	array<int, 10>::size_type; // 어떤 타입으로 세니?
	array<int, 10>::difference_type; // 반복자간의 거리를 어떤 타입으로 제니?
	array<int, 10>::reference; // 담고 있는 원소의 레퍼런스 타입은 뭐니?
	array<int, 10>::pointer; // 무슨타입의 포잉ㄴ터를 써야 너를 담을 수 있니?
	array<int, 10>::iterator; // 반복자는 무슨 타입이니?

	// constexpr : 컴파일 시 이 레퍼런스를 이용할 수 있는 상태
	
	a.back() = 12345;
	cout << a.back() << endl;
	for (int i = 0; i < a.size(); ++i)
		cout << a[i] << " ";

	a.fill(12345);
	for (int i = 0; i < a.size(); ++i)
		cout << a[i] << " ";

	MySaveFileCode::Save_File("5주차_2.cpp", "5주차_2.txt");
	//MySaveFileCode::Save_File("String.h", "String_Class.txt");
	//MySaveFileCode::Save_File("String.cpp", "String_Class.txt");

}
#endif // FIFTH_SECOND

#define FIFTH_SECOND
#ifdef FIFTH_SECOND

// --------------------------------------------------
//	2023 1 학기 STL 4월 03일 TUE 23 Tue 56 ( 5주 1)
// --------------------------------------------------
// STL 소개 
// --------------------------------------------------



#include <iostream>
#include <array> // 템플릿 이기 때문에 소스가 오픈되어 있다. 



#include "String.h"
#include "save.h"

using namespace std;

// -------	
int main()
// -------
{
	array<int, 10> a = { 1,3,5,7,9,2,4,6,8,10 }; // 40 바이트  - 10 은 end 위치가 아니다 10 앞에가 end()

	array<int, 10>::value_type; // 어떤 타입의 원소를 담고 있어?
	array<int, 10>::size_type; // 어떤 타입으로 세니?
	array<int, 10>::difference_type; // 반복자간의 거리를 어떤 타입으로 제니?
	array<int, 10>::reference; // 담고 있는 원소의 레퍼런스 타입은 뭐니?
	array<int, 10>::pointer; // 무슨타입의 포잉ㄴ터를 써야 너를 담을 수 있니?
	array<int, 10>::iterator; // 반복자는 무슨 타입이니?

	// constexpr : 컴파일 시 이 레퍼런스를 이용할 수 있는 상태
	
	a.back() = 12345;
	cout << a.back() << endl;
	for (int i = 0; i < a.size(); ++i)
		cout << a[i] << " ";

	a.fill(12345); // 모든 원소를 12345로 채운다. 
	for (int i = 0; i < a.size(); ++i)
		cout << a[i] << " ";
	
	// <=> // spaceship operator?

	MySaveFileCode::Save_File("5주차_2.cpp", "5주차_2.txt");
	//MySaveFileCode::Save_File("String.h", "String_Class.txt");
	//MySaveFileCode::Save_File("String.cpp", "String_Class.txt");

}
#endif // FIFTH_SECOND

#define FIFTH_SECOND
#ifdef FIFTH_SECOND

// --------------------------------------------------
//	2023 1 학기 STL 4월 03일 TUE 23 Tue 56 ( 5주 1)
// --------------------------------------------------
// STL 소개 
// --------------------------------------------------



#include <iostream>
#include <array> // 템플릿 이기 때문에 소스가 오픈되어 있다. 
#include <string>
#include <fstream>



#include "String.h"
#include "save.h"

using namespace std;

// -------	
int main()
// -------
{
	array<std::string, 100> a;

	// [문제] a에 "소스.cpp" 단어 100개를읽어와라.
	std::ifstream In{ "5주차_2.cpp" };
	for (int i = 0; i < 100; ++i) {
		In >> a[i];
	}

	for (int i = 0; i < 100; ++i) {
		cout << a[i] << endl;
	}




	MySaveFileCode::Save_File("5주차_2.cpp", "5주차_2.txt");
	//MySaveFileCode::Save_File("String.h", "String_Class.txt");
	//MySaveFileCode::Save_File("String.cpp", "String_Class.txt");

}
#endif // FIFTH_SECOND

#define FIFTH_SECOND
#ifdef FIFTH_SECOND

// --------------------------------------------------
//	2023 1 학기 STL 4월 03일 TUE 23 Tue 56 ( 5주 1)
// --------------------------------------------------
// STL 소개 
// --------------------------------------------------
#include <iostream>
#include <array> // 템플릿 이기 때문에 소스가 오픈되어 있다. 
#include <string>
#include <fstream>



#include "String.h"
#include "save.h"

using namespace std;

// -------	
int main()
// -------
{
	array<std::string, 100> a;

	// [문제] a에 "소스.cpp" 단어 100개를읽어와라.
	std::ifstream In{ "5주차_2.cpp" };
	for (int i = 0; i < 100; ++i) {
		In >> a[i];
	}

	for (int i = 0; i < 100; ++i) {
		cout << a[i] << endl;
	}




	MySaveFileCode::Save_File("5주차_2.cpp", "5주차_2.txt");
	//MySaveFileCode::Save_File("String.h", "String_Class.txt");
	//MySaveFileCode::Save_File("String.cpp", "String_Class.txt");

}
#endif // FIFTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 03일 TUE 23 Tue 56 ( 5주 1)
// --------------------------------------------------
// STL 소개 
// --------------------------------------------------
#include <iostream>
#include <array> // 템플릿 이기 때문에 소스가 오픈되어 있다. 
#include <string>
#include <fstream>



#include "String.h"
#include "save.h"

using namespace std;

// -------	
int main()
// -------
{
	array<std::string, 100> a;

	// [문제] a에 "소스.cpp" 단어 100개를읽어와라.
	std::ifstream In{ "5주차_2.cpp" };
	for (int i = 0; i < 100; ++i) {
		In >> a[i];
	}

	for (int i = 0; i < 100; ++i) {
		cout << a[i] << endl;
	}




	MySaveFileCode::Save_File("5주차_2.cpp", "5주차_2.txt");
	//MySaveFileCode::Save_File("String.h", "String_Class.txt");
	//MySaveFileCode::Save_File("String.cpp", "String_Class.txt");

}


