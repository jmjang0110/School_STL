
#define SEVENTH_SECOND
#ifdef	SEVENTH_SECOND

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  

#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	// [ 문제 ] - 어떤 컨테이너가 int 를 가장 많이 담을 수 있나? - benchmark 
	// vector deque list  
	// x86 으로 해보기 - x64 하면 컴퓨터 터짐 
	
	vector<int> v;
	try {
		while (true)
		{
			v.push_back(1); // 더이상 메모리에 못 넣으며 bad allocation 
		}
	}
	catch (exception& e) {
		cout << "메모리 고갈		- " << e.what() << endl;
		cout << "확보한 int 수	- " << v.size() << endl;

	}
	

	MySaveFileCode::Save_File("7주차 자료/7주차_2.cpp", "7주차 자료/MostStore_Container.txt");
	MySaveFileCode::Save_File_Auto(7, 2);
}

#endif

#define SEVENTH_SECOND
#ifdef	SEVENTH_SECOND

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  

#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	// [ 문제 ] - 어떤 컨테이너가 int 를 가장 많이 담을 수 있나? - benchmark 
	// vector deque list  
	// x86 으로 해보기 - x64 하면 컴퓨터 터짐 
	
	deque<int> v;
	try {
		while (true)
		{
			v.push_back(1); // 더이상 메모리에 못 넣으며 bad allocation 
		}
	}
	catch (exception& e) {
		cout << "메모리 고갈		- " << e.what() << endl;
		cout << "확보한 int 수	- " << v.size() << endl;

	}
	

	MySaveFileCode::Save_File("7주차 자료/7주차_2.cpp", "7주차 자료/MostStore_Container.txt");
	MySaveFileCode::Save_File_Auto(7, 2);
}

#endif

#define SEVENTH_SECOND
#ifdef	SEVENTH_SECOND

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  

#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	// [ 문제 ] - 어떤 컨테이너가 int 를 가장 많이 담을 수 있나? - benchmark 
	// vector deque list  
	// x86 으로 해보기 - x64 하면 컴퓨터 터짐 
	
	vector<int> v;
	try {
		while (true)
		{
			v.push_back(1); // 더이상 메모리에 못 넣으며 bad allocation 
		}
	}
	catch (exception& e) {
		cout << "메모리 고갈		- " << e.what() << endl;
		cout << "확보한 int 수	- " << v.size() << endl;

	}
	

	MySaveFileCode::Save_File("7주차 자료/7주차_2.cpp", "7주차 자료/MostStore_Container.txt");
	MySaveFileCode::Save_File_Auto(7, 2);
}

#endif

#define SEVENTH_SECOND
#ifdef	SEVENTH_SECOND

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  

#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	// [ 문제 ] - 어떤 컨테이너가 int 를 가장 많이 담을 수 있나? - benchmark 
	// vector - 136'216'567 
	// deque 
	// list  
	// x86 으로 해보기 - x64 하면 컴퓨터 터짐 
	
	deque<int> v;
	try {
		while (true)
		{
			v.push_back(1); // 더이상 메모리에 못 넣으며 bad allocation 
		}
	}
	catch (exception& e) {
		cout << "메모리 고갈		- " << e.what() << endl;
		cout << "확보한 int 수	- " << v.size() << endl;

	}
	

	MySaveFileCode::Save_File("7주차 자료/7주차_2.cpp", "7주차 자료/MostStore_Container.txt");
	MySaveFileCode::Save_File_Auto(7, 2);
}

#endif

#define SEVENTH_SECOND
#ifdef	SEVENTH_SECOND

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  
#include <list>

#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	// [ 문제 ] - 어떤 컨테이너가 Test 객체 ( 1024 바이트 ) 를 가장 많이 담을 수 있나? 
	// vector - 136'216'567 
	// deque -  268'435'452
	// list  -	 85'392'610
	// x86 으로 해보기 - x64 하면 컴퓨터 터짐 
	
	vector<int> v;
	try {
		while (true)
		{
			v.push_back({}); // 더이상 메모리에 못 넣으며 bad allocation 
		}
	}
	catch (exception& e) {
		cout << "메모리 고갈		- " << e.what() << endl;
		cout << "확보한 int 수	- " << v.size() << endl;

	}
	

	MySaveFileCode::Save_File("7주차 자료/7주차_2.cpp", "7주차 자료/MostStore_Container.txt");
	MySaveFileCode::Save_File_Auto(7, 2);
}

#endif

#define SEVENTH_SECOND
#ifdef	SEVENTH_SECOND

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  
#include <list>

#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	// [ 문제 ] - 어떤 컨테이너가 Test 객체 ( 1024 바이트 ) 를 가장 많이 담을 수 있나? 
	// vector - 136'216'567 
	// deque -  268'435'452
	// list  -	 85'392'610
	// x86 으로 해보기 - x64 하면 컴퓨터 터짐 
	
	vector<int> v;
	try {
		while (true)
		{
			v.push_back({}); // 더이상 메모리에 못 넣으며 bad allocation 
		}
	}
	catch (exception& e) {
		cout << "메모리 고갈		- " << e.what() << endl;
		cout << "확보한 int 수	- " << v.size() << endl;

	}
	

	MySaveFileCode::Save_File("7주차 자료/7주차_2.cpp", "7주차 자료/MostStore_Container.txt");
	MySaveFileCode::Save_File_Auto(7, 2);
}

#endif

#define SEVENTH_SECOND
#ifdef	SEVENTH_SECOND

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  
#include <list>
/*
	vector -  136216567
	deque - 
*/
#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	// [ 문제 ] - 어떤 컨테이너가 Test 객체 ( 1024 바이트 ) 를 가장 많이 담을 수 있나? 
	// vector - 136'216'567 
	// deque -  268'435'452
	// list  -	 85'392'610
	// x86 으로 해보기 - x64 하면 컴퓨터 터짐 
	
	deque<int> v;
	try {
		while (true)
		{
			v.push_back({}); // 더이상 메모리에 못 넣으며 bad allocation 
		}
	}
	catch (exception& e) {
		cout << "메모리 고갈		- " << e.what() << endl;
		cout << "확보한 int 수	- " << v.size() << endl;

	}
	

	MySaveFileCode::Save_File("7주차 자료/7주차_2.cpp", "7주차 자료/MostStore_Container.txt");
	MySaveFileCode::Save_File_Auto(7, 2);
}

#endif

#define SEVENTH_SECOND
#ifdef	SEVENTH_SECOND

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  
#include <list>
/*
	vector -  136216567
	deque -   268435452
	list -	   85375361
	
*/
#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	// [ 문제 ] - 어떤 컨테이너가 Test 객체 ( 1024 바이트 ) 를 가장 많이 담을 수 있나? 
	// vector - 136'216'567 
	// deque -  268'435'452
	// list  -	 85'392'610
	// x86 으로 해보기 - x64 하면 컴퓨터 터짐 
	
	vector<int> v;
	try {
		while (true)
		{
			v.push_back({}); // 더이상 메모리에 못 넣으며 bad allocation 
		}
	}
	catch (exception& e) {
		cout << "메모리 고갈		- " << e.what() << endl;
		cout << "확보한 int 수	- " << v.size() << endl;

	}
	

	MySaveFileCode::Save_File("7주차 자료/7주차_2.cpp", "7주차 자료/MostStore_Container.txt");
	MySaveFileCode::Save_File_Auto(7, 2);
}

#endif

#define SEVENTH_SECOND
#ifdef	SEVENTH_SECOND

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  
#include <list>
#include <queue>

/*
	vector -  136216567
	deque -   268435452
	list -	   85375361
	
*/
#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	// [ 문제 ] - 어떤 컨테이너가 Test 객체 ( 1024 바이트 ) 를 가장 많이 담을 수 있나? 
	// vector - 136'216'567 
	// deque -  268'435'452
	// list  -	 85'392'610
	// x86 으로 해보기 - x64 하면 컴퓨터 터짐 
	
	vector<int> v;
	try {
		while (true)
		{
			v.push_back({}); // 더이상 메모리에 못 넣으며 bad allocation 
		}
	}
	catch (exception& e) {
		cout << "메모리 고갈		- " << e.what() << endl;
		cout << "확보한 int 수	- " << v.size() << endl;

	}
	

	MySaveFileCode::Save_File("7주차 자료/7주차_2.cpp", "7주차 자료/MostStore_Container.txt");
	MySaveFileCode::Save_File_Auto(7, 2);
}

#endif

#define SEVENTH_SECOND
#ifdef	SEVENTH_SECOND

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  
#include <list>
#include <queue>

#include <fstream>


/*
	vector -  136216567
	deque -   268435452
	list -	   85375361
	
*/
#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	// [문제] : list.txt 를 읽어 list<String>에 저장하라
	// 모두 몇 단어인가 출력하라 

	std::ifstream InFile{ "list.txt" };
	if (!InFile) {
		cout << "File Open Failed" << endl;
		return 0;
	}

	list<String> ListStr;
	String s;
	while (InFile >> s) {
		ListStr.push_back(s);
	}

	
	MySaveFileCode::Save_File("7주차 자료/7주차_2.cpp", "7주차 자료/MostStore_Container.txt");
	MySaveFileCode::Save_File_Auto(7, 2);
}

#endif

#define SEVENTH_SECOND
#ifdef	SEVENTH_SECOND

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  
#include <list>
#include <queue>

#include <fstream>


/*
	vector -  136216567
	deque -   268435452
	list -	   85375361
	
*/
#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	// [문제] : list.txt 를 읽어 list<String>에 저장하라
	// 모두 몇 단어인가 출력하라 

	std::ifstream InFile{ "list.txt" };
	if (!InFile) {
		cout << "File Open Failed" << endl;
		return 0;
	}

	list<String> ListStr;
	String s;
	while (InFile >> s) {
		ListStr.push_back(s);
	}

	cout << ListStr.size() << endl;


	
	MySaveFileCode::Save_File("7주차 자료/7주차_2.cpp", "7주차 자료/MostStore_Container.txt");
	MySaveFileCode::Save_File_Auto(7, 2);
}

#endif

#define SEVENTH_SECOND
#ifdef	SEVENTH_SECOND

// ============================================ //
// deque
// vector 와는 반대로 contiguious 하게 메모리에 저장되어있지 않지만 
// 인덱싱이 되어있다. 
// 
// ============================================ //

#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>		// 앞뒤에서 멤버를 추가하는 동작이 쉽다  
#include <list>
#include <queue>

#include <fstream>


/*
	vector -  136216567
	deque -   268435452
	list -	   85375361
	
*/
#include "../save.h"
#include "../String.h"

using namespace std;

extern bool 관찰;

int main()
{
	// [문제] : list.txt 를 읽어 list<String>에 저장하라
	// 모두 몇 단어인가 출력하라 

	std::ifstream InFile{ "list.txt" };
	if (!InFile) {
		cout << "File Open Failed" << endl;
		return 0;
	}

	list<String> ListStr; // insert 하면 랜덤하게 막 집어넣는다 
	String s;
	while (InFile >> s) { // EOF 처리  까지 해준다
		ListStr.push_back(s);
	}

	cout << ListStr.size() << endl;


	
	MySaveFileCode::Save_File("7주차 자료/7주차_2.cpp", "7주차 자료/MostStore_Container.txt");
	MySaveFileCode::Save_File_Auto(7, 2);
}

#endif
