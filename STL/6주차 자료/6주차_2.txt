#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	vector<String> v{ "333", "1", "22", "55555", "4444" };

	// [문제] : v를 길이 오름차순으로 정렬하라
	

	sort(v.begin(), v.end(), [](const String& Ls, const String& Rs) {
		return Ls.getSize() < Rs.getSize();
		});

	for (const String& s : v)
		cout << s << endl;

	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	/*
		
	*/
	vector<String> v{ "333", "1", "22", "55555", "4444" };

	// [문제] : v를 길이 오름차순으로 정렬하라
	
	// auto : 라고 쓰면 뭐라고 날아오는지 모른다. 가독성을 위해서 auto 말고 원래 String 을 쓰자.

	sort(v.begin(), v.end(), [](const String& Ls, const String& Rs) {
		return Ls.getSize() < Rs.getSize();
		});

	for (const String& s : v)
		cout << s << endl;

	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	/*
		
	*/
	vector<String> v{ "333", "1", "22" };

	관찰 = false;

	/*
	
	*/
	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	/*
		
	*/
	vector<String> v{ "333", "1", "22" };

	관찰 = false;

	/*
	
	*/
	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	/*
		
	*/
	vector<String> v{ "333", "1", "22" };

	
	/*
	
	*/
	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	/*
		
	*/
	vector<String> v;
	v.push_back("123");


	
	/*
	
	*/
	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	/*
		
	*/
	vector<String> v;
	v.push_back("123");
	v.push_back("12345");



	
	/*
	
	*/
	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	/*
		
	*/
	vector<String> v;
	v.push_back("123");
	
	cout << "원소 수		- " << v.size() << endl;
	cout << "data 위치	- " << v.data() << endl;
	cout << "Capacity	- " << v.capacity() << endl;




	
	/*
	
	*/
	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	/*
		
	*/
	vector<String> v;

	
	cout << "원소 수		- " << v.size() << endl;
	cout << "data 위치	- " << v.data() << endl;
	cout << "Capacity	- " << v.capacity() << endl;


	v.push_back("123");

	
	/*
	
	*/
	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	/*
		
	*/
	vector<String> v;

	
	cout << "원소 수		- " << v.size() << endl;
	cout << "data 위치	- " << v.data() << endl;
	cout << "Capacity	- " << v.capacity() << endl;


	v.push_back("123");

	cout << "data 위치	- " << v.data() << endl;

	/*
	
	*/
	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	/*
		
	*/
	vector<String> v;

	
	cout << "원소 수		- " << v.size() << endl;
	cout << "data 위치	- " << v.data() << endl;
	cout << "Capacity	- " << v.capacity() << endl;


	v.push_back("123");

	cout << "원소 수		- " << v.size() << endl;
	cout << "data 위치	- " << v.data() << endl;
	cout << "Capacity	- " << v.capacity() << endl;
	/*
	
	*/
	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	vector<String> v;

	v.push_back("123");

	cout << " 하나 더 추가 " << endl << endl;

	v.push_back("34567");

	관찰 = false;
	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	vector<String> v;

	v.push_back("123");

	cout << " 하나 더 추가 " << endl << endl;

	v.push_back("34567");

	관찰 = false;
	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	
	관찰 = true;
	vector<String> v;

	v.push_back("123");

	cout << " 하나 더 추가 " << endl << endl;

	v.push_back("34567");
	v.push_back("890");


	관찰 = false;
	
	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	관찰 = true;


	vector<String> v;
	v.reserve(3);
	v.push_back("123");

	

	관찰 = false;

	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	관찰 = true;


	vector<String> v;
	//v.reserve(3);
	v.push_back("123");

	

	관찰 = false;

	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	관찰 = true;


	vector<String> v;
	//v.reserve(3);
	v.push_back("123");
	v.push_back("123");

	

	관찰 = false;

	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	관찰 = true;


	vector<String> v;
	v.reserve(3);
	//v.push_back("123");
	v.emplace_back(String{ "123" });
	/*
		emplace_back 
			
	
	*/
	
	//v.push_back("123");

	

	관찰 = false;

	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	관찰 = true;


	vector<String> v;
	v.reserve(3);
	//v.push_back("123");
	v.emplace_back("123");

	/*
		emplace_back 
			
	
	*/
	
	//v.push_back("123");

	

	관찰 = false;

	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	관찰 = true;


	vector<String> v;
	v.reserve(3);
	//v.push_back("123");
	v.emplace_back("123");
	v.emplace_back();


	/*
		emplace_back 
			
	
	*/
	
	//v.push_back("123");

	

	관찰 = false;

	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;


int main(void)
{
	extern bool 관찰;
	관찰 = true;


	vector<String> v;
	v.reserve(3);
	//v.push_back("123");
	v.emplace_back("123"); // 생성자의 인자만  전달한다. 
	v.emplace_back();
	v.emplace_back(String{});



	/*
		emplace_back 
			
	
	*/
	
	//v.push_back("123");

	

	관찰 = false;

	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;

/*
	[ 문제 ] : "6주차_2.cpp" 를 읽어 알파벳만 vector에 저장하라.
	대소문자 구분하지 말고 다음과 같은 형식으로 문자의 빈도를 출력하라. 


	a - 10
	b - 20

	z - 0

*/


int main(void)
{
	vector<char> vChar;
	std::ifstream InFile{ "6주차_2.cpp" };
	char c;
	while (InFile >> c) {
		cout << c << endl;


	}


	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;

/*
	[ 문제 ] : "6주차_2.cpp" 를 읽어 알파벳만 vector에 저장하라.
	대소문자 구분하지 말고 다음과 같은 형식으로 문자의 빈도를 출력하라. 


	a - 10
	b - 20

	z - 0

*/


int main(void)
{
	vector<char> vChar;
	std::ifstream InFile{ "6주차_2.cpp" };
	char c;
	while (InFile >> c) {
		if(isalpha(c))
			cout << c << endl;


	}


	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;

/*
	[ 문제 ] : "6주차_2.cpp" 를 읽어 알파벳만 vector에 저장하라.
	대소문자 구분하지 말고 다음과 같은 형식으로 문자의 빈도를 출력하라. 


	a - 10
	b - 20

	z - 0

*/


int main(void)
{
	vector<char> vChar;
	std::ifstream InFile{ "6주차_2.cpp" };
	char c;
	int AlPhabet[26]{};

	while (InFile >> c) {

		if (isalpha(c)) {
			// 대문자
			if (isupper(c)) {

				AlPhabet[c - 'A'] += 1;

			}
			// 소문자
			else {

				AlPhabet[c - 'a'] += 1;

			}
		}
	
		

	}

	for (int i = 0; i < 26; ++i) {
		cout << AlPhabet[i] << endl;;

	}


	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>


#include "String.h"
#include "save.h"
using namespace std;

/*
	[ 문제 ] : "6주차_2.cpp" 를 읽어 알파벳만 vector에 저장하라.
	대소문자 구분하지 말고 다음과 같은 형식으로 문자의 빈도를 출력하라. 


	a - 10
	b - 20

	z - 0

*/


int main(void)
{
	vector<char> vChar;
	vector<int> AlphaCnt;

	std::ifstream InFile{ "6주차_2.cpp" };
	char c;
	int AlPhabet[26]{};

	while (InFile >> c) {

		if (isalpha(c)) {
			// 대문자
			if (isupper(c)) {

			}
			// 소문자
			else {

			}
		}
	}


	for (int i = 0; i < 26; ++i) {
		cout << AlPhabet[i] << endl;;

	}


	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>
#include <array>


#include "String.h"
#include "save.h"
using namespace std;

/*
	[ 문제 ] : "6주차_2.cpp" 를 읽어 알파벳만 vector에 저장하라.
	대소문자 구분하지 말고 다음과 같은 형식으로 문자의 빈도를 출력하라. 


	a - 10
	b - 20

	z - 0

*/


int main(void)
{
	vector<char> vChar;
	vector<int> AlphaCnt;

	std::ifstream InFile{ "6주차_2.cpp" };
	char c;
	array<int, 26> Alphabet;

	while (InFile >> c) {

		if (isalpha(c)) {
			// 대문자
			if (isupper(c)) {
				Alphabet[c - 'A'] += 1;
			}
			// 소문자
			else {
				Alphabet[c - 'a'] += 1;

			}
		}
	}


	for (int i = 0; i < 26; ++i) {
		cout << Alphabet[i] << endl;;

	}


	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>
#include <array>


#include "String.h"
#include "save.h"
using namespace std;

/*
	[ 문제 ] : "6주차_2.cpp" 를 읽어 알파벳만 vector에 저장하라.
	대소문자 구분하지 말고 다음과 같은 형식으로 문자의 빈도를 출력하라. 


	a - 10
	b - 20

	z - 0

*/


int main(void)
{
	vector<char> vChar;
	vector<int> AlphaCnt;

	std::ifstream InFile{ "6주차_2.cpp" };
	char c;
	array<int, 26> Alphabet{};

	while (InFile >> c) {

		if (isalpha(c)) {
			// 대문자
			if (isupper(c)) {
				Alphabet[c - 'A'] += 1;
			}
			// 소문자
			else {
				Alphabet[c - 'a'] += 1;

			}
		}
	}


	for (int i = 0; i < 26; ++i) {
		cout << Alphabet[i] << endl;;

	}


	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>
#include <array>


#include "String.h"
#include "save.h"
using namespace std;

/*
	[ 문제 ] : "6주차_2.cpp" 를 읽어 알파벳만 vector에 저장하라.
	대소문자 구분하지 말고 다음과 같은 형식으로 문자의 빈도를 출력하라. 


	a - 10
	b - 20

	z - 0

*/


int main(void)
{
	vector<char> vChar;
	vector<int> AlphaCnt;

	std::ifstream InFile{ "6주차_2.cpp" };
	char c;
	array<int, 26> Alphabet{};

	while (InFile >> c) {

		if (isalpha(c)) {
			// 대문자
			if (isupper(c)) {
				Alphabet[c - 'A'] += 1;
			}
			// 소문자
			else {
				Alphabet[c - 'a'] += 1;

			}
		}
	}


	for (int i = 0; i < 26; ++i) {
		cout << Alphabet[i] << endl;;

	}


	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


#define SIXTH_SECOND
#ifdef SIXTH_SECOND


// --------------------------------------------------
//	2023 1 학기 STL 4월 10일 MON 23 Tue 56 ( 5주 1)
// --------------------------------------------------
//	Sequence Container - vector - dynamic array ( 크기가 변한다 ) - Release 에서 해야한다.
// 1. 공간을 예약하고 쓰지 ( 재할당이 안되도록 유의하라 )  
//		vector가 재할당 되는 게 장점이지만 최대한 안하게하자 .
// 2. emplace 가 훨씬 push_back 보다 훨씬 좋다 
// --------------------------------------------------

#include <iostream>
#include <array>
#include <vector>
#include <thread>

#include <fstream>
#include <algorithm>
#include <numeric>
#include <array>


#include "String.h"
#include "save.h"
using namespace std;

/*
	[ 문제 ] : "6주차_2.cpp" 를 읽어 알파벳만 vector에 저장하라.
	대소문자 구분하지 말고 다음과 같은 형식으로 문자의 빈도를 출력하라. 


	a - 10
	b - 20

	z - 0

*/


int main(void)
{
	vector<char> vChar;
	vector<int> AlphaCnt;

	std::ifstream InFile{ "6주차_2.cpp" };
	char c;
	array<int, 26> Alphabet{};

	while (InFile >> c) {
		if (isalpha(c)) {
			Alphabet[tolower(c) - 'a']++;
		}



		//if (isalpha(c)) {
		//	// 대문자
		//	if (isupper(c)) {
		//		Alphabet[c - 'A'] += 1;
		//	}
		//	// 소문자
		//	else {
		//		Alphabet[c - 'a'] += 1;

		//	}
		//}
	}


	for (int i = 0; i < 26; ++i) {
		cout << Alphabet[i] << endl;;
		cout << (char)('a' + i) << " - " << Alphabet[i] << endl;
	}


	MySaveFileCode::Save_File("6주차_2.cpp", "6주차_2.txt");
}
#endif


